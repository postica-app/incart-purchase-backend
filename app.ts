import { router } from './routes.ts'
import { Oak, oakCors } from './deps.ts'
import { EndpointError } from './EndpointError.ts'

const IS_DEV = Deno.env.get('STAGE') === 'dev'

if (IS_DEV) {
    console.log(
        `
     ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
    /  //‚ïê‚ïê‚ïê‚ïê//
   /  //                            
  /  //    _____
 /  //    /__  |
/‚ïê‚ïê//        | |
             | |_______________
             | //:::::::::::::/
             |//:::::::::::::/
             \\--------------/ 
              \\____________/      ‚ïê‚ïê‚ïê‚ïê
               |----------|      /  //
               0          0     /  //
                               /  //
                      /‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê/  //
                     /‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê//
`
    )
    console.log(`
                                       
    ‚îå‚ïê‚îê‚îå‚ïê‚îê ‚îå‚ïê‚îê .‚ïê‚ïê‚ïê.   /‚Äæ‚Äæ\\  .‚ïê‚ïê‚ïê‚ïê. |‚Äæ‚Äæ‚Äæ‚Äæ‚Äæ|
    ‚Äñ ‚Äñ‚Äñ  '| ‚Äñ/  ___} /_()_\\ ‚Äñ ‚Äñ\\  } ‚Äæ‚Äñ ‚Äñ‚Äæ
    ‚Äñ ‚Äñ‚Äñ |\\  ‚Äñ\\  ‚Äæ‚Äæ‚Äæ}/  /\\  \\‚Äñ |‚Äæ\\ \\  ‚Äñ ‚Äñ  
    ‚îî‚ïê‚îò‚îî‚ïê‚îò ‚îî‚ïê‚îò '‚ïê‚ïê‚ïê' ‚ï∞‚ïê‚ïØ  ‚ï∞‚ïê‚ïØ‚îî‚ïê‚îò  '‚ïê' ‚îî‚ïê‚îò
    `)
    console.log(
        // Align is little bit off, but it's okay. :D
        `
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ ‚îê
‚îÇ         üòä CAUTION!!üòä           ‚îÇ
‚îÇ                                  ‚îÇ
‚îÇ  YOU ARE IN DEV MODE             ‚îÇ
‚îÇ  But nothing bad will happen :)  ‚îÇ
‚îÇ  Just go ahead and develop! And  ‚îÇ
|  don't forget to run real        ‚îÇ
‚îÇ  server without devmode off      ‚îÇ
‚îÇ                                  ‚îÇ
‚îÇ  - 2022.12.24,                   ‚îÇ
‚îÇ    By Rycont in Christmas Eve    ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
    `.trim()
    )
}

const app = new Oak()

const ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
    'purchase.incart.me',
    'embed.incart.me',
    'rycont.loca.lt',
    'tidy-rat-99.loca.lt',
]

app.use(
    oakCors({
        origin: (host) => {
            if (!host) return false

            const url = new URL(host)
            return ALLOWED_HOSTS.includes(url.hostname)
        },
    })
)

app.use(async (ctx, next) => {
    try {
        return await next()
    } catch (e) {
        if (e instanceof EndpointError) {
            ctx.response.status = e.status
            ctx.response.body = {
                message: e.message,
                code: e.code,
            }
            console.error(e)
        } else {
            ctx.response.status = 500
            ctx.response.body = {
                message:
                    'Ïïå Ïàò ÏóÜÎäî Î¨∏Ï†úÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§. Îã§Ïãú ÌïúÎ≤à ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî.',
                code: 'internal_server_error',
            }
            console.error(e)
        }
    }
})

app.use(async (ctx, next) => {
    const captcha = ctx.request.headers.get('X-Captcha-Token')

    if (ctx.request.method === 'OPTIONS') return await next()

    if (!captcha) {
        if (IS_DEV) {
            console.log('‚ö†Ô∏è PLEASE CHECK!! ‚ö†Ô∏è')
            console.log(
                "Captcha token is not provided. If you are testing, please check 'X-Captcha-Token' header."
            )

            return await next()
        } else {
            throw new EndpointError('Forbidden', 403, 'required_captcha')
        }
    }

    const response = await (
        await fetch(
            'https://challenges.cloudflare.com/turnstile/v0/siteverify',
            {
                method: 'POST',
                body: new URLSearchParams({
                    secret: Deno.env.get('TURNSTILE_SECRET_KEY')!,
                    response: captcha,
                }),
            }
        )
    ).json()

    console.log(response)

    return await next()
})

app.use(router.allowedMethods())
app.use(router.routes())

await app.listen({ port: 8000 })

console.log('Server is running on port 8000')
